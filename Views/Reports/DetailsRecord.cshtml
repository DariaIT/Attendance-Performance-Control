@model ReportsViewModel
@{
    ViewData["Title"] = "Detalhes";
}

<div class="row">
    <div>
        <a class="icone pt-3 pl-3" title="Voltar" asp-action="Index" asp-route-searchByUser="@Context.Request.Query["searchByUser"]" asp-route-searchByDept="@Context.Request.Query["searchByDept"]" asp-route-dateRangeSearch="@Context.Request.Query["dateRangeSearch"]">
            <i class="fa fa-2x fa-arrow-circle-left"></i>
        </a>
    </div>
    <div class="col-md-4 offset-md-4 p-2">
        <table class="table table-striped table-bordered dt-responsive table-hover animate__animated animate__fadeIn text-center" width="100%" cellspacing="0">
            <thead class="thead-light">
                <tr>
                <th colspan="2" style="font-size:18px">@ViewData["Title"]</th>
                </tr>
                </thead>
            <tbody>
                <tr>
                    <td class="font-weight-bold">Nome</td>
                    <td>@ViewData["Nome"]</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">Email</td>
                    <td>@ViewData["Email"]</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">@Html.DisplayNameFor(model => model.UserDepartment)</td>
                    <td>@Html.DisplayFor(model => model.UserDepartment)</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">@Html.DisplayNameFor(model => model.UserOccupation)</td>
                    <td>@Html.DisplayFor(model => model.UserOccupation)</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">@Html.DisplayNameFor(model => model.Data)</td>
                    <td>@Html.DisplayFor(model => model.Data)</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">@Html.DisplayNameFor(model => model.DayStartTime)</td>
                    <td>@Html.DisplayFor(model => model.DayStartTime)</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">@Html.DisplayNameFor(model => model.StartDayDelayExplanation)</td>
                    <td>
                        @{
                            var startDayExp = "";
                            if (Model.StartDayDelayExplanation != null)
                            {
                                startDayExp = Model.StartDayDelayExplanation;
                            }
                            else
                            {
                                startDayExp = "N/D";
                            }
                        }

                        @startDayExp
                    </td>
                </tr>
                <tr>
                    <td class="font-weight-bold">@Html.DisplayNameFor(model => model.DayEndTime)</td>
                    <td>@Html.DisplayFor(model => model.DayEndTime)</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">@Html.DisplayNameFor(model => model.EndDayDelayExplanation)</td>
                    <td>
                        @{
                            var endDayExp = "";
                            if (Model.EndDayDelayExplanation != null)
                            {
                                endDayExp = Model.StartDayDelayExplanation;
                            }
                            else
                            {
                                endDayExp = "N/D";
                            }
                        }

                        @endDayExp
                    </td>
                </tr>
                <tr>
                    <td class="font-weight-bold">@Html.DisplayNameFor(model => model.TotalHoursForWork)</td>
                    <td>@Html.DisplayFor(model => model.TotalHoursForWork)</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">@Html.DisplayNameFor(model => model.TotalHoursForIntervals)</td>
                    <td>@Html.DisplayFor(model => model.TotalHoursForIntervals)</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">Intervalos</td>
                    <td>
                        @{
                            var intervalLine = "";
                            foreach (var interval in (ViewData["IntervalsList"] as List<IntervalRecord>))
                            {
                                if(interval.IntervalType !=null)
                                    intervalLine = String.Concat(interval.StartTime.ToString("HH\\:mm"), " - ", interval.EndTime.ToString("HH\\:mm"), " - ", interval.IntervalType);
                                else
                                    intervalLine = String.Concat(interval.StartTime.ToString("HH\\:mm"), " - ", interval.EndTime.ToString("HH\\:mm"), " - N/D");
                                @Html.Raw(intervalLine + "</br>");
                            }
                        }
                    </td>
                </tr>
            </tbody>
            </table>

                <div class="pt-3 text-center">
                    <a class="btn btn-primary" title="Voltar" asp-action="Index" asp-route-searchByUser="@Context.Request.Query["searchByUser"]" asp-route-searchByDept="@Context.Request.Query["searchByDept"]" asp-route-dateRangeSearch="@Context.Request.Query["dateRangeSearch"]">
                        Voltar
                    </a>
                </div>
    </div>
</div>

